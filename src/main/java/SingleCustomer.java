

import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Miko ja Nastia
 */
public class SingleCustomer extends javax.swing.JDialog {

    /**
     * Creates new form SingleCustomer
     */
    
    private int idint;
    private String firstnamestring;
    private String lastnamestring;
    private String spostistring;
    private String puhnumstring;
    private String muistiinpanotstring;
    int muokkaustila = 0;
    public static TablesDialog tabledialog;
    
  String col[] = {"Pöytä Numero", "Hinta","Alkaa","Loppuu", "Selite"};     
  DefaultTableModel tablemodel = new DefaultTableModel(col, 0);
    
    
    public SingleCustomer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
        public void setTable() throws SQLException, ParseException {
       AccessToMysql mysql = new AccessToMysql();
       mysql.connectah();
       DefaultTableModel model = (DefaultTableModel) tabletti.getModel();
       model.setRowCount(0);
       tablemodel = mysql.getsinglerents(tablemodel, customerid.getText());
       tabletti.setModel(tablemodel);
        this.tabletti.setDefaultEditor(Object.class, null);
        mysql.closeConnect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        customerid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        firstname = new javax.swing.JTextField();
        lastname = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        phonenumber = new javax.swing.JTextField();
        memos = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabletti = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Asiakasnumero:");

        jLabel2.setText("Etunimi:");

        jLabel3.setText("Sukunimi:");

        jLabel4.setText("Sähköpostiosoite:");

        jLabel5.setText("Puhelinnumero:");

        jLabel6.setText("Muistiinpanot:");

        tabletti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabletti);

        jLabel7.setText("Henkilön pöytähistoria: ");

        jButton1.setText("Tallenna");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Vuokraa pöytä");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Poista asiakas");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(customerid)
                            .addComponent(firstname)
                            .addComponent(lastname)
                            .addComponent(email)
                            .addComponent(phonenumber)
                            .addComponent(memos, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(173, 173, 173)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(99, 99, 99))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(customerid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(phonenumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(memos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 193, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(95, 95, 95))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void setLabels(int idint, String firstnamestring, String lastnamestring, String spostistring, String puhnumString, String muistiinpanotstring) {
        customerid.setText("" + idint);
        firstname.setText(firstnamestring);
        lastname.setText(lastnamestring);
        email.setText(spostistring);
        phonenumber.setText(puhnumString);
        memos.setText(muistiinpanotstring);
        
        this.idint = idint;
        this.firstnamestring = firstnamestring;
        this.lastnamestring = lastnamestring;
        this.spostistring = spostistring;
        this.puhnumstring = puhnumString;
        this.muistiinpanotstring = muistiinpanotstring;
        
        muokkaustila = 1;
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       AccessToMysql mysql = new AccessToMysql();
       mysql.connectah();
       
       idint = Integer.parseInt(customerid.getText());
       firstnamestring = firstname.getText();
       lastnamestring = lastname.getText();
       spostistring = email.getText();
       puhnumstring = phonenumber.getText();
       muistiinpanotstring = memos.getText();
       
       
       
       if (muokkaustila == 0) {
        try {
            mysql.addCustomer(idint, firstnamestring, lastnamestring, spostistring, puhnumstring, muistiinpanotstring);
        } catch (SQLException ex) {
            Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }
        
           try {
               mysql.closeConnect();
           } catch (SQLException ex) {
               Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
           }
           dispose();
           try {
               Firstpage.customersdialog.setTable();
           } catch (SQLException ex) {
               Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
           } catch (ParseException ex) {
               Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
           }
       }
       else if (muokkaustila == 1) {
           try {
               mysql.updateCustomer(idint, firstnamestring, lastnamestring, spostistring, puhnumstring, muistiinpanotstring);
           } catch (SQLException ex) {
               Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
               
           }
           try {
               mysql.closeConnect();
           } catch (SQLException ex) {
               Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
           }
           
           try {
               Firstpage.customersdialog.setTable();
           } catch (SQLException ex) {
               Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
           } catch (ParseException ex) {
               Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
           }
           dispose();
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       tabledialog = new TablesDialog(Mainclass.firstpage, true);
       tabledialog.poydanvuokrausmode = 1;
     
       int sellerid = Integer.parseInt(customerid.getText());
       tabledialog.myyjaid = sellerid;
       
        try {
           tabledialog.setTable();
       } catch (SQLException ex) {
           Logger.getLogger(Firstpage.class.getName()).log(Level.SEVERE, null, ex);
       } catch (ParseException ex) {
            Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }
       tabledialog.setVisible(true);
       dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     
        AccessToMysql mysql = new AccessToMysql();
        mysql.connectah();
        int palautus = 99999999;
        int toinenpalautus = 999999999;
        try {
            palautus = mysql.checkifneedstobepaidfirst(this.idint);
        } catch (SQLException ex) {
            Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (palautus > 0) {
            JOptionPane.showMessageDialog(this, "Asiakkaalla on maksamattomia tuottoja pöydistä. Maksa ne, ennnen poistamista.");
        }
        
        else {
            
            try {
                toinenpalautus = mysql.checkifneedstobedropdfromtable(this.idint);
            } catch (SQLException ex) {
                Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            if (toinenpalautus > 0) {
                 JOptionPane.showMessageDialog(this, "Asiakkaalla on voimassa olevia pöytävuokria. Poista ne, ennen poistamista.");
            }
            
            else {
            
        String poista = JOptionPane.showInputDialog("Näppäile 12345 poistaaksesi tunnuksen: " + this.idint  + " " + this.firstnamestring + " " + this.lastnamestring);
         if (poista.equals("12345")) {
            try {
                mysql.updatetotyhjapoytaonremovingcustomer(this.idint);
            } catch (SQLException ex) {
                Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            try {
                mysql.updatevuokrauksetondelete(this.idint);
            } catch (SQLException ex) {
                Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            try {
                mysql.deletecustomer(this.idint);
            } catch (SQLException ex) {
                Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            }
        
        
        
       
        
        
        
        
        }
        try {
            mysql.closeConnect();
        } catch (SQLException ex) {
            Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            Firstpage.customersdialog.setTable();
        } catch (SQLException ex) {
            Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(SingleCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SingleCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SingleCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SingleCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SingleCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SingleCustomer dialog = new SingleCustomer(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField customerid;
    private javax.swing.JTextField email;
    private javax.swing.JTextField firstname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastname;
    private javax.swing.JTextField memos;
    private javax.swing.JTextField phonenumber;
    private javax.swing.JTable tabletti;
    // End of variables declaration//GEN-END:variables
}
